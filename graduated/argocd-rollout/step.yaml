version: '1.0'
kind: step-type
metadata:
  name: argocd-rollout
  version: 1.6.1
  isPublic: true
  description: This pipeline plugin trigger a rollout for ArgoCD app
  sources:
    - 'https://github.com/codefresh-io/cf-argo-plugin'
  stage: graduated
  categories:
    - GitOps
  official: true
  icon:
    type: svg
    url: https://cdn.jsdelivr.net/gh/codefresh-io/steps/graduated/argocd-rollout/argo.svg
    background: "#f4f4f4"
  maintainers:
    - name: Nazar Rohozhuk
  examples:
    - workflow:
        promote_rollout:
          title: "Promote Argo rollout"
          type: argocd-rollout
          arguments:
            k8s_context: '${{K8S_CONTEXT}}'
            rollout_name: '${{ROLLOUT_NAME}}'
            rollout_namespace: ${{ROLLOUT_NAMESPACE}}
            context: 'argocd'
            app_name: "${{ARGOCD_APP_NAME}}"
            wait_healthy: true
    - workflow:
        promote_rollout_without_context:
          title: Promote Argo rollout
          type: argocd-rollout
          arguments:
            k8s_context: '${{K8S_CONTEXT}}'
            rollout_name: '${{ROLLOUT_NAME}}'
            rollout_namespace: ${{ROLLOUT_NAMESPACE}}
  latest: true
spec:
  arguments: |
    {
      "definitions": {},
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "additionalProperties": false,
      "patterns": [],
      "required": [
          "rollout_name",
          "k8s_context"
      ],
      "properties": {
          "host": {
            "type": "string",
            "description": "Host for argo integration, examlple https://argo. Used only when context is not provided!",
            "default": ""
          },
          "username": {
            "type": "string",
            "description": "Username of argo integration. Used only when context is not provided!",
            "default": ""
          },
          "password": {
            "type": "string",
            "description": "Password of argo integration. Used only when context is not provided!",
            "default": ""
          },
          "context": {
            "type": "string",
            "description": "Name of argocd context from integrations",
            "default": ""
          },
          "app_name": {
              "type": "string",
              "description": "The argocd application to wait health status",
              "default": ""
          },
          "wait_healthy": {
              "type": "boolean",
              "description": "Specify whether to wait for sync to be completed (in canary consider wait for suspended status)",
              "default": false
          },
          "k8s_context": {
              "type": "string",
              "description": "Kubernetes context"
          },
          "rollout_name": {
              "type": "string",
              "description": "The name of the rollout to be promoted"
          },
          "rollout_namespace": {
              "type": "string",
              "description": "The namespace of the rollout",
              "default": "default"
          },
          "additional_flags_for_wait_cmd": {
              "type": "string",
              "description": "Additional flags for argocd app wait command ( like --grpc-web, so on )",
              "default": ""
          },
          "debug": {
              "type": "boolean",
              "description": "Debug sync command ( print in terminal )",
              "default": false
          }
      }
    }
  steps:
    runArgoCd:
      title: "Run ArgoCD"
      image: "quay.io/codefreshplugins/cf-argo-plugin:0.2.2"
      commands:
        - >-
          cf-argo-plugin rollout "${{app_name}}"
          --cf-host=$CF_URL --cf-token=$CF_API_KEY --cf-integration="${{context}}"
          --argo-host=${{host}} --argo-username=${{username}} --argo-password="${{password}}"
          --k8s-context=${{k8s_context}} --rollout-name=${{rollout_name}} --rollout-namespace=${{rollout_namespace}} --wait-healthy=${{wait_healthy}} --debug=${{debug}}
          --out-commands-file /codefresh/volume/argo-executor --out-export-file /codefresh/volume/argo-export_url --wait-additional-flags="${{additional_flags_for_wait_cmd}}"
        - chmod +x /codefresh/volume/argo-executor
        - chmod +x /codefresh/volume/argo-export_url
        - /codefresh/volume/argo-export_url
    executeArgoCd:
      title: "ExecuteArgoCd"
      image: "codefresh/cf-argo-plugin:0.2.2"
      commands:
        - /codefresh/volume/argo-executor
