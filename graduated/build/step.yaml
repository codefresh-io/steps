kind: step-type
version: "1.0"
metadata:
  name: build
  title: Build a Docker image
  isPublic: true
  description: Build a Dockerfile and push it to the internal Codefresh registry.
  sources:
    - 'https://github.com/codefresh-io/steps/tree/master/graduated/build'
  stage: graduated
  version: 1.2.3
  categories:
    - featured
    - docker
  official: true
  icon:
    type: svg
    url: https://cdn.jsdelivr.net/gh/codefresh-io/steps/graduated/build/icon-2.svg
    background: "#81D4FA"
  maintainers:
    - name: Codefresh INC
  examples:
    - description: Basic usage of build step to build step based on parameter Codefresh injects with tag master and dockerfile named 'Dockerfile'
      name: Basic
      workflow:
        Docker-Build:
          title: Building docker image
          type: build
          working_directory: '${{CLONE_STEP_NAME}}'
          arguments:
            image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
            tag: master
    - description: 'Delegate building image to Google Cloud Build'
      name: GCB
      workflow:
        GCBuild:
          title: Building docker image
          type: build
          working_directory: '${{CLONE_STEP_NAME}}'
          arguments:
            image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
            tag: master
            provider:
              type: gcb
              arguments:
                google_app_creds: '${{G_CREDS_B64}}'
                cache:
                  repo: "${{CF_REPO_OWNER}}/kaniko-cache"
                  ttl: "10h"
                timeout: "600s"
                machineType: 'N1_HIGHCPU_8'
                logsBucket: "gs://your-project_id_cloudbuild/logs"
                diskSizeGb: 10
spec:
  arguments: |
    {
        "definitions": {},
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "additionalProperties": false,
         "patterns": [],
         "required": [
         "image_name"
         ],
        "properties": {
            "working_directory": {
                "type": "string",
                "description": "The directory in which the build command is executed. It can be an explicit path in the containerâ€™s file system, or a variable that references another step. The default is ${{main_clone}}."
            },
            "dockerfile": {
                "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object",
                    "properties": {
                    "content": {
                        "type": "string"
                    }
                    },
                    "additionalProperties": false,
                    "patterns": [

                    ]
                }
                ],
                "default": "Dockerfile",
                "description": "The path to the Dockerfile from which the image is built. The default is Dockerfile."
            },
            "no_cache": {
                "type": "boolean",
                "description": "Disable Docker engine cache for the build. <a href=\"https://codefresh.io/docs/docs/troubleshooting/common-issues/disabling-codefresh-caching-mechanisms/\">more info</a>"
            },
            "no_cf_cache": {
                "type": "boolean",
                "description": "Disable Codefresh build optimization for the build. <a href=\"https://codefresh.io/docs/docs/troubleshooting/common-issues/disabling-codefresh-caching-mechanisms/\">more info</a>"
            },
            "squash": {
                "type": "boolean",
                "description": "Squash newly built layers into a single new layer."
            },
            "image_name": {
                "type": "string",
                "description": "The name for the image you build."
            },
            "build_arguments": {
                "type": "array",
                "items": {
                "type": "string"
                },
                "description": "A set of <a href=\"https://docs.docker.com/engine/reference/commandline/build/#set-build-time-variables-build-arg\">Docker build arguments</a> to pass to the build process."
            },
            "tag": {
                "type": "string",
                "description": "The tag that is assigned to the image you build. The default is the name of the branch or revision that is built."
            },
            "tag_policy": {
                "type": "string",
                "description": "The case-transformation policy for the tag name. One of original to keep tag name as is, or lowercase, the default, to convert to lowercase. For lowercase, tags in mixed case are pushed as image_name:<tagname> ."
            },
            "target": {
                "type": "string",
                "description": "target stage in a multistage build (build will run until this stage)"
            },
            "tags": {
                "type": "array",
                "items": {
                "type": "string"
                },
                "description": "Multiple tags under which to push the image."
            },
            "registry": {
                "type": "string",
                "description": "The registry logical name of one of the inserted registries from the integration view."
            },
            "registry_contexts": {
                "type": "array",
                "items": {
                "type": "string"
                },
                "description": "The registry logical name of one of the inserted registries from the integration view. The default values is primary registries by domain. Note that this is needed to do docker login to specified registries."
            },
            "disable_push": {
                "type": "boolean",
                "description": "Do not push to any registry automatically."
            },
            "provider": {
                "type": "object",
                "additionalProperties": true,
                "description": "Define if to build image with Codefresh, the default, or with an external provider such as Google Cloud Build (gcb). If not used, the pipeline builds the image locally on the pipeline pod. gcb  requires additional arguments: google_app_creds, cache - both repo and ttl, timeout, machineType, logsBucket, and diskSizeGb . See example for details."
            },
            "platform": {
                "type": "string",
                "description": "Set target platform/s (comma separated list) for build."
            },
            "buildx": {
                "oneOf": [
                  {
                      "type": "boolean"
                  },
                  {
                      "type": "object",
                      "properties": {
                        "qemu": {
                            "type": "object",
                            "properties": {
                              "image": {
                                  "type": "string",
                                  "description": "QEMU static binaries Docker image.",
                                  "default": "tonistiigi/binfmt:latest"
                              },
                              "platforms": {
                                  "type": "string",
                                  "description": "Platforms to install (e.g. arm64,riscv64,arm).",
                                  "default": "all"
                              }
                            },
                            "description": "Configure which QEMU static binaries will be installed.",
                            "additionalProperties": false
                        },
                        "builder": {
                            "type": "object",
                            "properties": {
                              "driver": {
                                  "type": "string",
                                  "description": "Sets the builder driver to be used.",
                                  "default": "docker-container"
                              },
                              "driver_opts": {
                                  "type": "string",
                                  "description": "List of additional driver-specific options (e.g. image=moby/buildkit:master)."
                              }
                            },
                            "description": "Configure the builder instance that will be created and used to build the image.",
                            "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                  }
                ],
                "description": "Build and push Docker images with <a href=\"https://github.com/docker/buildx\">Buildx</a> including multi-platform builds (set to `true` to enable with default configuration, or set to an object with custom configuration). <a href=\"https://codefresh.io/docs/docs/pipelines/steps/build/#multi-platform-images-with-platfrom-and-buildx\">more info</a>",
                "default": false
            }
        }
    }
