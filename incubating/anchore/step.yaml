kind: step-type
version: '1.0'
metadata:
  name: anchore
  version: 0.0.4
  isPublic: true
  description: Analyze Docker images and generate a detailed manifest using Anchore
  sources:
    - >-
      https://github.com/codefresh-io/steps/tree/master/incubating/anchore
  stage: incubating
  maintainers:
    - name: Jeremy Valance
  categories:
    - security
  official: false
  tags: []
  icon:
    type: image
    size:
      large:
        url: >-
          https://cdn.jsdelivr.net/gh/codefresh-io/steps/incubating/anchore/icon.jpg
  examples:
    - description: example-1
      workflow:
        ScanMyImage:
          title: Scanning Docker Image with the anchore Codefresh plugin
          type: anchore
          arguments:
            ANCHORE_CLI_URL: http://anchore-engine:8228/v1/
            ANCHORE_CLI_USER: admin
            ANCHORE_CLI_PASS: foobar
            ANCHORE_CLI_IMAGE: alpine
            ANCHORE_CLI_FAIL_ON_POLICY: "true"
    - description: example-2
      workflow:
        ScanMyImage:
          title: Scanning Docker Image with anchore-cli
          image: anchore/engine-cli
          commands:
          - anchore-cli system wait --timeout 30
          - anchore-cli image add ${ANCHORE_CLI_IMAGE}
          - anchore-cli image wait ${ANCHORE_CLI_IMAGE}
          - anchore-cli evaluate check ${ANCHORE_CLI_IMAGE};
          environment:
          - ANCHORE_CLI_URL=http://anchore-engine:8228/v1/
          - ANCHORE_CLI_USER=admin
          - ANCHORE_CLI_PASS=foobar
          - ANCHORE_CLI_IMAGE=alpine:latest
          - ANCHORE_FAIL_ON_POLICY=true
    - description: example-3
      workflow:
        ScanMyImage:
          title: Scanning Docker Image without external Anchore engine
          image: anchore/inline-scan:v0.3.3
          shell: bash
          commands:
          - docker-entrypoint.sh start > /dev/null 2>&1 & anchore_ci_tools.py --wait --timeout 300
          - anchore_ci_tools.py --analyze --report --image ${IMAGE_NAME} --timeout 300
          - anchore-cli image get ${IMAGE_NAME}
          - anchore-cli evaluate check ${IMAGE_NAME} || true
          # - anchore-cli evaluate check ${IMAGE_NAME} # The step exits with the error if the image status is 'fail'
          environment:
          - IMAGE_NAME=mysql:5.7
spec:
  arguments: |-
    {
        "definitions": {},
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "additionalProperties": false,
        "patterns": [],
        "required": [],
        "properties": {
            "ANCHORE_CLI_URL": {
                "type": "string",
                "description": "The address of the Anchore server"
            },
            "ANCHORE_CLI_USER": {
                "type": "string",
                "description": "Anchore account name"
            },
            "ANCHORE_CLI_PASS": {
                "type": "string",
                "description": "Anchore account password"
            },
            "ANCHORE_FAIL_ON_POLICY": {
                "type": "string",
                "description": "Fail build if policy evaluation fails"
            },
            "ANCHORE_CLI_IMAGE": {
                "type": "string",
                "description": "Name of the image to scan with Anchore"
            }
        }
    }
  steps:
    main:
      name: anchore
      image: codefresh/anchore-plugin
      environment:
        - 'ANCHORE_CLI_URL=${{ANCHORE_CLI_URL}}'
        - 'ANCHORE_CLI_USER=${{ANCHORE_CLI_USER}}'
        - 'ANCHORE_CLI_PASS=${{ANCHORE_CLI_PASS}}'
        - 'ANCHORE_FAIL_ON_POLICY=${{ANCHORE_FAIL_ON_POLICY}}'
        - 'ANCHORE_CLI_IMAGE=${{ANCHORE_CLI_IMAGE}}'
