# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"cf-argocd-agent","app.kubernetes.io/instance":"codefresh-argocd-agent"},"name":"cf-argocd-agent","namespace":"argocd"},"spec":{"replicas":1,"revisionHistoryLimit":5,"selector":{"matchLabels":{"app":"cf-argocd-agent"}},"strategy":{"rollingUpdate":{"maxSurge":"50%","maxUnavailable":"50%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"cf-argocd-agent"}},"spec":{"containers":[{"env":[{"name":"AGENT_VERSION","value":"1.72.3"},{"name":"ARGO_HOST","value":"https://argocd-server"},{"name":"ARGO_USERNAME","value":"admin"},{"name":"ARGO_PASSWORD","valueFrom":{"secretKeyRef":{"key":"argo.password","name":"cf-argocd-agent"}}},{"name":"ENV_NAME","value":"kubernetes"},{"name":"CODEFRESH_HOST","value":"https://g.codefresh.io"},{"name":"CODEFRESH_TOKEN","valueFrom":{"secretKeyRef":{"key":"codefresh.token","name":"cf-argocd-agent"}}},{"name":"IN_CLUSTER","value":"true"},{"name":"MASTERURL","value":""},{"name":"SYNC_MODE","value":"CONTINUE_SYNC"},{"name":"APPLICATIONS_FOR_SYNC","value":""},{"name":"CODEFRESH_INTEGRATION","value":"argocd"},{"name":"CODEFRESH_GIT_INTEGRATION","value":"github"}],"image":"core.harbor.dvb.sales-dev.codefresh.io/sales-dev/argocd-agent:stable","imagePullPolicy":"Always","name":"cf-argocd-agent","resources":{"limits":{"cpu":"0.8","memory":"512Mi"},"requests":{"cpu":"0.4","memory":"256Mi"}}}],"imagePullSecrets":[{"name":"dvb-harbor"}],"nodeSelector":{"kubernetes.io/arch":"amd64"},"restartPolicy":"Always","serviceAccountName":"cf-argocd-agent"}}}}
  creationTimestamp: "2021-08-29T19:39:47Z"
  generation: 3
  labels:
    app: cf-argocd-agent
    app.kubernetes.io/instance: codefresh-argocd-agent
  name: cf-argocd-agent
  namespace: argocd
  resourceVersion: "17597894"
  selfLink: /apis/apps/v1/namespaces/argocd/deployments/cf-argocd-agent
  uid: b98f1d2b-3994-46a2-b8dc-ce10dcd39ac2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: cf-argocd-agent
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: cf-argocd-agent
    spec:
      containers:
      - env:
        - name: AGENT_VERSION
          value: 1.72.3
        - name: ARGO_HOST
          value: https://argocd-server
        - name: ARGO_USERNAME
          value: admin
        - name: ARGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: argo.password
              name: cf-argocd-agent
        - name: ENV_NAME
          value: kubernetes
        - name: CODEFRESH_HOST
          value: https://g.codefresh.io
        - name: CODEFRESH_TOKEN
          valueFrom:
            secretKeyRef:
              key: codefresh.token
              name: cf-argocd-agent
        - name: IN_CLUSTER
          value: "true"
        - name: MASTERURL
        - name: SYNC_MODE
          value: CONTINUE_SYNC
        - name: APPLICATIONS_FOR_SYNC
        - name: CODEFRESH_INTEGRATION
          value: argocd
        - name: CODEFRESH_GIT_INTEGRATION
          value: github
        image: core.harbor.dvb.sales-dev.codefresh.io/sales-dev/argocd-agent:stable
        imagePullPolicy: Always
        name: cf-argocd-agent
        resources:
          limits:
            cpu: 800m
            memory: 512Mi
          requests:
            cpu: 400m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dvb-harbor
      nodeSelector:
        kubernetes.io/arch: amd64
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: cf-argocd-agent
      serviceAccountName: cf-argocd-agent
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2021-08-29T19:39:47Z"
    lastUpdateTime: "2021-10-05T22:27:45Z"
    message: ReplicaSet "cf-argocd-agent-56c5578998" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2021-10-05T22:28:09Z"
    lastUpdateTime: "2021-10-05T22:28:09Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
