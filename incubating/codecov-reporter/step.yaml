version: '1.0'
kind: step-type
metadata:
  name: codecov-reporter
  title: Sends a code scan report to codecov
  version: 2.0.0
  isPublic: true
  description: Sends a code scan report to codecov
  sources:
    - 'https://github.com/codefresh-io/steps/tree/master/incubating/codecov-reporter'
  stage: incubating
  maintainers:
    - name: Pavel Kostohrys
      email: pavel@codefresh.io
  categories:
    - build
  official: true
  tags: []
  icon:
    type: svg
    url: >-
      https://about.codecov.io/wp-content/themes/codecov/assets/brand/icons/codecov/codecov-circle.svg
    background: '#f4f4f4'
  examples:
    - description: 'send codecov report'
      workflow:
        codecov-report:
          title: Codecov report
          type: codecov-reporter
          arguments:
            codecov_integration: codecov
    - description: 'send codecov report with working_directory'
      workflow:
        codecov-report:
          title: Codecov report
          type: codecov-reporter
          arguments:
            codecov_integration: codecov
            working_directory: '/codefresh/volume/${{CF_REPO_NAME}}'
    - description: 'send codecov report using manual trigger'
      workflow:
        codecov-report:
          title: Codecov report
          type: codecov-reporter
          arguments:
            codecov_integration: codecov
            working_directory: './report-directory'
  created_at: '2021-04-15T15:42:47.178Z'
  updated_at: '2021-04-15T15:42:47.178Z'
  latest: true
spec:
  arguments: |-
    {
        "definitions": {},
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "additionalProperties": false,
        "patterns": [],
        "required": [
            "codecov_integration"
        ],
        "properties": {
            "codecov_integration": {
                "type": "string",
                "description": "Codecov integration name"
            },
            "os": {
                "type": "string",
                "description": "OS being used ( alpine | linux | macos | windows )",
                "default": "linux"
            },
            "working_directory": {
                "type": "string",
                "description": "The directory to which the repository is cloned. It can be an explicit path in the containerâ€™s file system, or a variable that references another step. The default value is '/codefresh/volume/${{CF_REPO_NAME}}'",
                "default": "/codefresh/volume/${{CF_REPO_NAME}}"
            }
        }
    }
  steps:
    first:
      title: "get token"
      image: codefresh/cli
      environment:
        - CODECOV_INTEGRATION=${{codecov_integration}}
      commands:
        - export CODECOV_API_KEY=$(codefresh get context $CODECOV_INTEGRATION --decrypt -o yaml | yq -r -c .spec.data.token)
        - echo CODECOV_API_KEY=$CODECOV_API_KEY >> /meta/env_vars_to_export
    second:
      name: "send report"
      image: node:15.2
      environment:
        - CODECOV_API_KEY=${{CODECOV_API_KEY}}
        - WORKING_DIRECTORY=${{working_directory}}
        - os=${{os}}
      commands:
        - cd ${WORKING_DIRECTORY}
        - curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step
        - curl -Os "https://uploader.codecov.io/latest/${{os}}/codecov"
        - curl -Os "https://uploader.codecov.io/latest/${{os}}/codecov.SHA256SUM"
        - curl -Os "https://uploader.codecov.io/latest/${{os}}/codecov.SHA256SUM.sig"
        - gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
        - shasum -a 256 -c codecov.SHA256SUM
        - chmod +x ./codecov
        - ./codecov -t ${{CODECOV_API_KEY}} -Q codefresh-2.0.0 | tee codecov.log
        # [<< timestamp >>] ['info'] {"status":"success","resultURL":"<< Codecov URL >>"}
        - cf_export second_CF_OUTPUT_URL=$(grep -A0 'resultURL' codecov.log | awk 'BEGIN{FS="\"";}{print $8}')
