kind: step-type
version: '1.0'
metadata:
  name: laurent-cf/service-now
  version: 1.1.0
  isPublic: true
  description: Integration with ServiceNow Change Management
  sources:
    - https://github.com/codefresh-io/steps/tree/master/incubating/service-now
  stage: incubating
  maintainers:
    - name: Laurent Rochette
    - email: laurent.rochette@codefresh.io
  categories:
    - utilities
  official: true
  tags: []
  icon:
    type: svg
    url: https://raw.githubusercontent.com/codefresh-io/steps/snow-issue402/incubating/service-now/images/servicenow-2.svg
    background: "#f4f4f4"
  examples:
    - description: service-now
      workflow:
        createChange:
          title: Create a Service Now Change Request
          type: service-now
          stage: deploy
          arguments:
            action: createCR
            SN_INSTANCE: https://instance.service-now.com
            SN_USER: ${{SN_USER}}
            SN_PASSWORD: ${{SN_PASSWORD}}
            data: '{"short_description":"This is a Change Request created by Codefresh","description":"long description for Codefresh build ${{CF_BUILD_ID}}","justification":"because our app is awesome"}'
        wait:
          stage: deploy
          title: Waiting for Change Request to be approved
          type: pending-approval
          timeout:
            duration: 48
            timeUnit: hours
            finalState: denied
        closeCR:
          title: Close the CR
          type: service-now
          stage: cleaning
          arguments:
            action: closeCR
            SN_INSTANCE: https://instance.service-now.com
            SN_USER: ${{SN_USER}}
            SN_PASSWORD: ${{SN_PASSWORD}}
            data: '{"close_code":"success", "close_note":"Closed automatically by Codefresh build ${{CF_BUILD_ID}}"}'

spec:
  arguments: |-
    {
      "definitions": {},
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "additionalProperties": true,
      "patterns": [],
      "required": [
        "SN_INSTANCE",
        "SN_USER",
        "SN_PASSWORD",
        "TOKEN"
      ],
      "properties": {
        "SN_INSTANCE": {
            "type": "string",
            "description": "The URL to your Service-now instance aka https://instance.service-now.com"
        },
        "SN_USER": {
            "type": "string",
            "description": "The username to log into the instance"
        },
        "SN_PASSWORD": {
            "type": "string",
            "description": "The password associated to the username to log  into the instance"
        },
        "TOKEN": {
            "type": "string",
            "description": "The Codefresh API token to allow ServiceNow to approve/deny the pipeline"
        },
        "namespace": {
            "type": "string",
            "description": "The endpoint namespace to call if using a different one. The system will call $SN_INSTANCE/api/$endpoint",
            "default": "409723"
        },
        "data": {
            "type": "string",
            "description": "The body to create the CR. Need to include all the fields required for your Change Management implementation."
        },
        "action": {
            "type": "string",
            "description": "Action to execute: createCR or closeCR",
            "default": "createCR"
        },
        "debug": {
          "type": "string",
          "default": "false",
          "description": "a hidden option show more debug info"
        }
      }
    }
  returns: |-
    {
        "definitions": {},
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "additionalProperties": true,
        "patterns": [],
        "required": [
          "CR_NUMBER",
          "CR_SYS_ID"
        ],
        "properties": {
            "sys_id": {
                "type": "string",
                "description": "The sys_id of the CR created"
            },
            "cr_number": {
                "type": "string",
                "description": "The number of the CR created."
            },
            "cr_sysid": {
                "type": "string",
                "description": "The sys_id of the CR created."
            }
        }
    }
  stepsTemplate: |-
    [[ if .Arguments.action == "closeCR" ]]
      createCR:
        name: Close a ServiceNow Change Request
        title: Use REST API to close the CR
        image: lrochette/service-now:1.1.0'
        environment:
          - action=closeCR
        [[ range $key, $val := .Arguments ]]
          - '[[ $key ]]=[[ $val ]]'
        [[- end ]]
    [[ end ]]
    [[ if .Arguments.action == "createCR" ]]
      createCR:
        name: Create a ServiceNow Change Request
        title: Use REST API to create a CR
        image: lrochette/service-now:1.1.0'
        environment:
          - action=createCR
        [[ range $key, $val := .Arguments ]]
          - '[[ $key ]]=[[ $val ]]'
        [[- end ]]
      createAnnotation:
        name: Assign CR_NUMBER as annotation
        image: codefresh/cli
        commands:
          - |
            codefresh create annotation workflow ${{CF_BUILD_ID}} CR_NUMBER=${{CR_NUMBER}}
            export createAnnotation_CF_OUTPUT_URL='[[.Arguments.SN_INSTANCE]]/nav_to.do?uri=/change_request.do?sys_id=${{CR_SYS_ID}}'
            # echo $createAnnotation_CF_OUTPUT_URL
            # cf_export createAnnotation_CF_OUTPUT_URL
      callback:
        name: invoke scripted REST API to have ServiceNow callback Codefresh when CR is approved/rejected
        title: ServiceNow callback setup
        #image: 'quay.io/codefreshplugins/service-now:1.1.0'
        image: lrochette/service-now:1.1.0'

        environment:
          - action=callback
        [[ range $key, $val := .Arguments ]]
          - '[[ $key ]]=[[ $val ]]'
        [[- end ]]
    [[ end ]]
  delimiters:
    left: '[['
    right: ']]'
